{"ast":null,"code":"import\"./PlayAllButton.css\";import React,{useEffect,useRef,useState}from'react';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPlay,faPause}from'@fortawesome/free-solid-svg-icons';import{faStepBackward,faStepForward}from'@fortawesome/free-solid-svg-icons';import{faCircleDown}from'@fortawesome/free-solid-svg-icons';import songs from'../../data/DataSong';//Create the playallbutton to play the songs\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const PlayAllButton=()=>{const[currentSongIndex,setCurrentSongIndex]=useState(0);const[isPlaying,setIsPlaying]=useState(false);const audioRef=useRef(null);const handlePlayNext=()=>{setCurrentSongIndex(prevIndex=>(prevIndex+1)%songs.length);setIsPlaying(false);};const handlePlayPrev=()=>{setCurrentSongIndex(prevIndex=>(prevIndex-1+songs.length)%songs.length);setIsPlaying(true);};const handlePlayPause=()=>{if(isPlaying){audioRef.current.pause();}else{audioRef.current.play();}setIsPlaying(prevState=>!prevState);// Toggle play/pause state\n};useEffect(()=>{const handleEnded=()=>{handlePlayNext();};audioRef.current.addEventListener('ended',handleEnded);return()=>{audioRef.current.removeEventListener('ended',handleEnded);};},[currentSongIndex]);return/*#__PURE__*/_jsxs(\"div\",{className:\"play-music\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"prev-button btn\",onClick:handlePlayPrev,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faStepBackward,className:\"prev-icon\"})}),/*#__PURE__*/_jsxs(\"button\",{className:\"play-all-button btn\",onClick:handlePlayPause,children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:isPlaying?faPause:faPlay,className:\"play-icon\"}),/*#__PURE__*/_jsx(\"span\",{className:\"play-all\",children:isPlaying?'Pause':'Play All'})]}),/*#__PURE__*/_jsx(\"button\",{className:\"next-button btn\",onClick:handlePlayNext,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faStepForward,className:\"next-icon\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"down-button btn\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faCircleDown,className:\"down-icon-first\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"sudioDiv\",children:/*#__PURE__*/_jsx(\"audio\",{className:\"audio\",ref:audioRef,src:songs[currentSongIndex].audioSrc,controls:true})})]});};export default PlayAllButton;","map":{"version":3,"names":["React","useEffect","useRef","useState","FontAwesomeIcon","faPlay","faPause","faStepBackward","faStepForward","faCircleDown","songs","jsx","_jsx","jsxs","_jsxs","PlayAllButton","currentSongIndex","setCurrentSongIndex","isPlaying","setIsPlaying","audioRef","handlePlayNext","prevIndex","length","handlePlayPrev","handlePlayPause","current","pause","play","prevState","handleEnded","addEventListener","removeEventListener","className","children","onClick","icon","ref","src","audioSrc","controls"],"sources":["C:/Users/asus/Desktop/music_react/src/components/playAllButton/PlayAllButton.js"],"sourcesContent":["import \"./PlayAllButton.css\"\r\nimport React ,{useEffect, useRef, useState}from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay , faPause} from '@fortawesome/free-solid-svg-icons';\r\nimport { faStepBackward,faStepForward } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { faCircleDown } from '@fortawesome/free-solid-svg-icons';\r\nimport songs from '../../data/DataSong';\r\n\r\n//Create the playallbutton to play the songs\r\nconst PlayAllButton = () => {\r\n  const [currentSongIndex, setCurrentSongIndex] = useState(0)\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const audioRef=useRef(null);\r\n\r\n  const handlePlayNext = () => {\r\n    setCurrentSongIndex((prevIndex) => (prevIndex + 1) % songs.length);\r\n    setIsPlaying(false); \r\n  };\r\n\r\n  const handlePlayPrev = () => {\r\n    setCurrentSongIndex((prevIndex) => (prevIndex - 1 + songs.length) % songs.length);\r\n    setIsPlaying(true);  \r\n  };\r\n  \r\n  const handlePlayPause = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n    } else {\r\n      audioRef.current.play();\r\n    }\r\n    setIsPlaying((prevState) => !prevState); // Toggle play/pause state\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleEnded = () => {\r\n      handlePlayNext();\r\n    };\r\n\r\n    audioRef.current.addEventListener('ended', handleEnded);\r\n\r\n    return () => {\r\n      audioRef.current.removeEventListener('ended', handleEnded);\r\n    };\r\n  }, [currentSongIndex]);\r\n\r\n  \r\n  \r\n  return (\r\n    <div className=\"play-music\">\r\n      <button className=\"prev-button btn\" onClick={handlePlayPrev}>\r\n        <FontAwesomeIcon icon={faStepBackward} className=\"prev-icon\" />\r\n      </button>\r\n        <button className=\"play-all-button btn\" onClick={handlePlayPause}>\r\n                <FontAwesomeIcon icon={isPlaying ? faPause : faPlay} className=\"play-icon\"/>\r\n                <span className=\"play-all\">{isPlaying ? 'Pause' : 'Play All'}</span>\r\n                \r\n        </button>\r\n        <button className=\"next-button btn\" onClick={handlePlayNext}>\r\n        <FontAwesomeIcon icon={faStepForward} className=\"next-icon\" />\r\n      </button>\r\n        <button className=\"down-button btn\" >\r\n        <FontAwesomeIcon icon={faCircleDown} className=\"down-icon-first\"/>\r\n        </button>\r\n          <div className=\"sudioDiv\">\r\n          <audio className=\"audio\" ref={audioRef} src={songs[currentSongIndex].audioSrc} controls></audio>\r\n\r\n          </div>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default PlayAllButton;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}